---
# yamllint disable rule:line-length
- name: 'Auto backup | verify database'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: 'Auto backup | verify database | gather service status'
      ansible.builtin.service_facts:

    - name: 'Auto backup | verify database | gather service processes'
      ansible.builtin.shell: 'set -o pipefail && ps aux | grep "postgres"'
      args:
        executable: '/bin/bash'
      changed_when: false
      register: _test_postgres_processes

    # Will be enabled but not running, forked from @ service for version.
    - name: 'Auto backup | verify database | assert postgresql@.service enabled'
      ansible.builtin.assert:
        that:
          - '"postgresql.service" in ansible_facts.services'
          - 'ansible_facts["services"]["postgresql.service"]["status"] == "enabled"'
        fail_msg: 'postgresql.service should be active.'

    - name: 'Auto backup | verify database | assert postgresql@.service running'
      ansible.builtin.assert:
        that:
          - _test_postgres_processes.stdout_lines | length > 2
        fail_msg: 'Postgres has not successfully started.'

    # community.postgresql.postgresql_user - just check DB is created.
    - name: 'Auto backup | verify database | query DB skeleton'
      community.postgresql.postgresql_query:
        db: 'skeleton'
        query: 'select tablename from pg_catalog.pg_tables where schemaname=%(schema)s'
        named_args:
          schema: 'public'
        login_host: 'localhost'
        login_unix_socket: '/var/run/postgresql'
        login_user: 'postgres'
        port: '5432'
      become: true
      become_user: 'postgres'
      register: _test_query

    - debug:
        var: _test_query
    - name: 'Auto backup | verify database | assert DB skeleton created'
      ansible.builtin.assert:
        that:
          - _test_query.rowcount == 1
        fail_msg: 'skeleton.backup DB does not exist.'

- name: 'Auto backup | verify backup disabled'
  hosts: 'postgres-debian-12-auto_backup-disable'
  gather_facts: false
  tasks:
    - name: 'Auto backup | verify backup disabled | query postgres_backup'
      ansible.builtin.stat:
        path: '/etc/postgresql/17/scripts/postgres_backup'
      register: _test_postgres_backup

    - name: 'Auto backup | verify backup disabled| assert postgres_backup'
      ansible.builtin.assert:
        that:
          - not _test_postgres_backup.stat.exists
        fail_msg: >
          /etc/postgresql/17/scripts/postgres_backup should be removed.
