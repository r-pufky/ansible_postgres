---
# yamllint disable rule:line-length
###############################################################################
# Postgres Prep
###############################################################################
# Prep Postgres variables for installation and upgrade. SSL certificates and
# Locales must be installed to manage locales specified in databases creation.
#
# Postgres does not need to be stopped to update configuration, only restarted.

- name: 'Install | pre-requisite packages'
  ansible.builtin.include_role:
    name: 'r_pufky.deb.apt'
  vars:
    apt_packages:
      - '{{ postgres_role_prep_packages }}'
    apt_package_update_cache: true

- name: 'Prep | manage users'
  when: _postgres_srv_create_user.raw
  ansible.builtin.include_role:
    name: 'r_pufky.deb.users'
    tasks_from: 'role_account_add.yml'
  vars:
    users_role_user: '{{ postgres_role_user }}'
    users_role_group: '{{ postgres_role_group }}'

- name: 'Prep | enumerate system user {{ _postgres_srv_user.raw }}'
  ansible.builtin.user:
    name: '{{ _postgres_srv_user.raw }}'
  check_mode: true
  changed_when: false
  register: _postgres_srv_user_query

- name: 'Prep | parse system user UID/GID'
  ansible.builtin.set_fact:
    _postgres_srv_user: '{{
        _postgres_srv_user |
        combine({"role_uid": _postgres_srv_user_query.uid})
      }}'
    _postgres_srv_group: '{{
        _postgres_srv_group |
        combine({"role_gid": _postgres_srv_user_query.group})
      }}'

- name: 'Prep | set debconf postrm_purge_data'
  ansible.builtin.debconf:
    name: '{{ "postgresql-" ~ _postgres_srv_version.raw }}'
    question: '{{ _postgres_srv_purge_enable.role_question }}'
    vtype: 'boolean'
    value: '{{ _postgres_srv_purge_enable.role_value }}'

- name: 'Prep | set debconf auto_upgrade'
  ansible.builtin.debconf:
    name: 'postgresql'
    question: '{{ _postgres_srv_auto_upgrade_enable.role_question }}'
    vtype: 'boolean'
    value: '{{ _postgres_srv_auto_upgrade_enable.role_value }}'

- name: 'Prep | configure locales'
  community.general.locale_gen:
    name: '{{ item }}'
    state: 'present'
  loop: '{{ _postgres.locales }}'
